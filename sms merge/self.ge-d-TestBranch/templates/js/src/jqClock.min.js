(function ($) {
  $.clock = {
    version: "2.0.2",
    clock: null,
    digit_holder: null,
    date_holder: null,
    dates: {},
    weekday_holder: null,
    weekdays: null,
    quarters_holder: null,
    quarters: null,
    digits: {},
    digit_to_name: [],
    timestamp: null,
    time_rem: 0,
    c: {
      weekdays: ["ორშ", "სამ", "ოთხ", "ხუთ", "პარ", "შაბ", "კვი"],
      quarters: [
        "I კვარტალი",
        "II კვარტალი",
        "III კვარტალი",
        "IV კვარტალი"
      ]
    }
  };
  $.clock.update_time = function () {
    var UPDnow = moment();
    UPDnow.add($.clock.time_rem, 'seconds');
    var now = UPDnow.format("HHmmssdDDMMYYYY");
    $.clock.digits.h1.html($.clock.digit_to_name[now[0]]);
    $.clock.digits.h2.html($.clock.digit_to_name[now[1]]);
    $.clock.digits.m1.html($.clock.digit_to_name[now[2]]);
    $.clock.digits.m2.html($.clock.digit_to_name[now[3]]);
    $.clock.digits.s1.html($.clock.digit_to_name[now[4]]);
    $.clock.digits.s2.html($.clock.digit_to_name[now[5]]);
    // The library returns Sunday as the first day of the week.
    // Stupid, I know. Lets shift all the days one position down, 
    // and make Sunday last
    var dow = now[6];
    dow--;
    // Sunday!
    if (dow < 0) {
      // Make it last
      dow = 6;
    }
    var Q = Math.ceil((UPDnow.month() + 1) / 3) - 1;
    // Mark the active day of the week
    $.clock.weekdays.removeClass('active').eq(dow).addClass('active');
    $.clock.quarters.removeClass('active').eq(Q).addClass('active');
    // Schedule this function to be run again in 1 sec
    setTimeout($.clock.update_time, 1000);
  };
  $.fn.clock = function (d) {
    $.clock.timestamp = d.timestamp || null;
    $.clock.clock = $(this);
    if ($.clock.timestamp)
    {
      var $CompNow = Math.floor(Date.now() / 1000);
      $.clock.time_rem = parseInt($.clock.timestamp) - $CompNow;
    }
    // This object will hold the digit elements
    // Positions for the hours, minutes, and seconds
    var DatePositions = ['d1', 'd2', '-', 'm1', 'm2', '-', 'y1', 'y2', 'y3', 'y4'];
    var positions = ['h1', 'h2', ':', 'm1', 'm2', ':', 's1', 's2'];
    // Generate the digits with the needed markup,
    // and add them to the clock
    $.clock.digit_holder = $.clock.clock.find('.digits');
    $.clock.date_holder = $.clock.clock.find('.date');

    $.each(positions, function () {
      if (this == ':') {
        $.clock.digit_holder.append('<span>:</span>');
      } else {
        var pos = $('<span>');
        for (var i = 1; i < 8; i++) {
          pos.append('<span class="d' + i + '">');
        }
        // Set the digits as key:value pairs in the digits object
        $.clock.digits[this] = pos;
        // Add the digit elements to the page
        $.clock.digit_holder.append(pos);
      }
    });

    $.each(DatePositions, function () {
      if (this == '-') {
        $.clock.date_holder.append('<span class="slash">');
      } else
      {
        var pos = $('<span>');
        for (var i = 1; i < 8; i++)
        {
          pos.append('<span class="d' + i + '">');
        }
        // Set the digits as key:value pairs in the digits object
        $.clock.dates[this] = pos;
        // Add the digit elements to the page
        $.clock.date_holder.append(pos);
      }
    });
    // Add the weekday names
    $.clock.quarters = $.clock.clock.find('.quarters span');
    $.clock.weekdays = $.clock.clock.find('.weekdays span');
    $.clock.digit_to_name = '0 1 2 3 4 5 6 7 8 9'.split(' ');
    $.clock.update_time();
  };
  return this;
})(jQuery);